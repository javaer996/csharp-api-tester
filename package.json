{
  "name": "csharp-api-tester",
  "displayName": "C# API Tester",
  "description": "C# Web API testing extension with automatic endpoint detection and request generation",
  "version": "0.2.0",
  "publisher": "javaer996",
  "author": {
    "name": "tengjiang"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/javaer996/csharp-api-tester"
  },
  "bugs": {
    "url": "https://github.com/javaer996/csharp-api-tester/issues"
  },
  "homepage": "https://github.com/javaer996/csharp-api-tester#readme",
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Testing",
    "Debuggers",
    "Other"
  ],
  "keywords": [
    "csharp",
    "api",
    "testing",
    "webapi",
    "aspnet",
    "rest"
  ],
  "activationEvents": [
    "onLanguage:csharp"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "csharpApiTester.testApi",
        "title": "C#HttpRequest: Test API Endpoint"
      },
      {
        "command": "csharpApiTester.configureBaseUrl",
        "title": "C#HttpRequest: Configure API Base URL"
      },
      {
        "command": "csharpApiTester.showApiTestPanel",
        "title": "C#HttpRequest: Show API Test Panel"
      },
      {
        "command": "csharpApiTester.debugApiDetection",
        "title": "C#HttpRequest: Debug API Detection"
      },
      {
        "command": "csharpApiTester.manageEnvironments",
        "title": "C#HttpRequest: Manage API Environments"
      },
      {
        "command": "csharpApiTester.switchEnvironment",
        "title": "C#HttpRequest: Switch Environment"
      },
      {
        "command": "csharpApiTester.openEnvironmentManager",
        "title": "C#HttpRequest: Environment Manager",
        "icon": "$(settings-gear)"
      },
      {
        "command": "csharpApiTester.testDebug",
        "title": "C#HttpRequest: Test Debug"
      },
      {
        "command": "csharpApiTester.toggleApiDetection",
        "title": "C#HttpRequest: Toggle API Detection"
      }
    ],
    "configuration": {
      "title": "C# API Tester",
      "properties": {
        "csharpApiTester.environments": {
          "type": "array",
          "default": [
            {
              "name": "Development",
              "baseUrl": "http://localhost:5000",
              "basePath": "/api",
              "headers": {
                "Content-Type": "application/json"
              },
              "active": true
            },
            {
              "name": "Staging",
              "baseUrl": "https://staging.example.com",
              "basePath": "/api",
              "headers": {
                "Content-Type": "application/json",
                "Authorization": "Bearer your-token"
              },
              "active": false
            }
          ],
          "description": "API environments configuration"
        },
        "csharpApiTester.currentEnvironment": {
          "type": "string",
          "default": "Development",
          "description": "Currently active environment name"
        },
        "csharpApiTester.timeout": {
          "type": "number",
          "default": 30000,
          "description": "Request timeout in milliseconds"
        },
        "csharpApiTester.ai.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable AI-powered JSON value generation"
        },
        "csharpApiTester.ai.provider": {
          "type": "string",
          "default": "openai",
          "enum": ["openai", "azure-openai", "custom"],
          "description": "AI provider type"
        },
        "csharpApiTester.ai.apiKey": {
          "type": "string",
          "default": "",
          "description": "API key for AI service"
        },
        "csharpApiTester.ai.endpoint": {
          "type": "string",
          "default": "https://api.openai.com/v1/chat/completions",
          "description": "AI API endpoint URL"
        },
        "csharpApiTester.ai.model": {
          "type": "string",
          "default": "gpt-3.5-turbo",
          "description": "AI model name"
        },
        "csharpApiTester.ai.maxTokens": {
          "type": "number",
          "default": 1000,
          "description": "Maximum tokens for AI generation"
        },
        "csharpApiTester.ai.systemPrompt": {
          "type": "string",
          "default": "You are a professional API testing assistant. Generate realistic and contextually appropriate test data based on the API endpoint information and code context provided.",
          "description": "System prompt for AI generation"
        },
        "csharpApiTester.globalHeaders": {
          "type": "object",
          "default": {},
          "description": "Global headers applied to all requests"
        },
        "csharpApiTester.enableApiDetection": {
          "type": "boolean",
          "default": true,
          "description": "Enable automatic API endpoint detection and CodeLens"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./"
  },
  "devDependencies": {
    "@types/vscode": "^1.74.0",
    "@types/node": "18.x",
    "typescript": "^4.9.4"
  },
  "dependencies": {
    "axios": "^1.6.0"
  }
}